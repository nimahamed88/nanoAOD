{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "buried-illinois",
   "metadata": {},
   "source": [
    "# Generator level analysis from NanoAOD\n",
    "\n",
    "This notebook performs a generator level selection of 3 lepton + 4 jet event candidates which can be used for the search for double parton scattering production of $t\\bar{t}+J/\\Psi$.\n",
    "It is assumed that the $t\\bar{t}$ decays in a $(Wb)(Wb)\\rightarrow (\\ell\\nu b)(jj'b)$ final state and that the $J/\\Psi$ decays in a $\\ell\\ell$ final state.\n",
    "\n",
    "The events are skimmed by requiring either a trigger lepton (from the W decay) or two leptons with an invariant mass compatible with a $J/\\Psi$ decay."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0bd0f303",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.24/00\n"
     ]
    }
   ],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "sudden-accreditation",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 33.7 s, sys: 332 ms, total: 34.1 s\n",
      "Wall time: 10.5 s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <RTaskArenaWrapper>: CPU Bandwith Control Active. Proceeding with 4 threads accordingly\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "def runSelectionOn(infile='/eos/cms/store/cmst3/group/top/ttbarjpsi/ggpsi1g/ggpsi1g_NANOGEN.root',\n",
    "                   outfile='genlevel.root'):\n",
    "    \n",
    "    \"\"\"\n",
    "    runs a simple selection on a NanoGEN file and saves a snapshot of the event\n",
    "    the selection makes use of RDataFrames and additional functions coded in selection_helpers.h\n",
    "    \"\"\"\n",
    "\n",
    "    ROOT.gInterpreter.Declare('#include \"selection_helpers.h\"')\n",
    "    \n",
    "    ROOT.ROOT.EnableImplicitMT()\n",
    "    rdf = ROOT.RDataFrame('Events',infile)\n",
    "\n",
    "    #lepton selection: select in the kinematics region of interest\n",
    "    rdf = rdf.Define('genlep', 'GenPart_status==1 && GenPart_pt>1 && abs(GenPart_eta)<2.4 && (abs(GenPart_pdgId)==11 || abs(GenPart_pdgId)==13)') \\\n",
    "             .Define('n_genlep', 'Sum(genlep)') \\\n",
    "             .Filter('n_genlep>0')\n",
    "#     print('test')\n",
    "    for c in ['pdgId','pt','eta','phi']:\n",
    "        rdf = rdf.Define(f'GenLep_{c}',f'GenPart_{c}[genlep]')\n",
    "\n",
    "    #count trigger lepton candidates (high pT)\n",
    "    rdf = rdf.Define('gentriglep','GenLep_pt>20') \\\n",
    "             .Define('n_gentriglep', 'Sum(gentriglep)')\n",
    "        \n",
    "    #count dileptons in the J/Psi and Z mass regions\n",
    "    rdf = rdf.Define('genjpsicands', ' dileptonCands(GenLep_pdgId,GenLep_pt,GenLep_eta,GenLep_phi,3.096,1.2)') \\\n",
    "             .Define('n_genjpsicands', 'Sum(genjpsicands)') \\\n",
    "             .Define('genzcands', 'dileptonCands(GenLep_pdgId[gentriglep],GenLep_pt[gentriglep],GenLep_eta[gentriglep],GenLep_phi[gentriglep],91.,15.)') \\\n",
    "             .Define('n_genzcands', 'Sum(genzcands)')\n",
    "   \n",
    "    #filter: 1 trigger or 1 J/Psi lepton but no Z candidate\n",
    "    rdf = rdf.Filter('(n_gentriglep>0 || n_genjpsicands>0) && n_genzcands==0')\n",
    "    \n",
    "    #save information on trigger lepton\n",
    "    rdf = rdf.Define('TrigLepton_pdgId','n_gentriglep>0 ? GenLep_pdgId[gentriglep][0] : 0') \\\n",
    "             .Define('TrigLepton_pt',   'n_gentriglep>0 ? GenLep_pt[gentriglep][0]: 0') \\\n",
    "             .Define('TrigLepton_eta',  'n_gentriglep>0 ? GenLep_eta[gentriglep][0]: 0') \\\n",
    "             .Define('TrigLepton_phi',  'n_gentriglep>0 ? GenLep_phi[gentriglep][0]: 0')\n",
    "    \n",
    "    #save information on J/Psi leptons\n",
    "    for i in range(2):\n",
    "        rdf = rdf.Define(f'JPsiLepton_{i+1}_pdgId',f'n_genjpsicands>0 ? GenLep_pdgId[genjpsicands][{i}] : 0') \\\n",
    "                 .Define(f'JPsiLepton_{i+1}_pt',   f'n_genjpsicands>0 ? GenLep_pt[genjpsicands][{i}] : 0') \\\n",
    "                 .Define(f'JPsiLepton_{i+1}_eta',  f'n_genjpsicands>0 ? GenLep_eta[genjpsicands][{i}] : 0') \\\n",
    "                 .Define(f'JPsiLepton_{i+1}_phi',  f'n_genjpsicands>0 ? GenLep_phi[genjpsicands][{i}] : 0')\n",
    "\n",
    "    #save kinematics of the J/Psi    \n",
    "    rdf = rdf.Define('JPsi_mass','n_genjpsicands > 0 ? kinematics2l(JPsiLepton_1_pdgId,JPsiLepton_1_pt,JPsiLepton_1_eta,JPsiLepton_1_phi,JPsiLepton_2_pdgId,JPsiLepton_2_pt,JPsiLepton_2_eta,JPsiLepton_2_phi,\"mass\") : 0') \\\n",
    "             .Define('JPsi_pt','n_genjpsicands > 0 ? kinematics2l(JPsiLepton_1_pdgId,JPsiLepton_1_pt,JPsiLepton_1_eta,JPsiLepton_1_phi,JPsiLepton_2_pdgId,JPsiLepton_2_pt,JPsiLepton_2_eta,JPsiLepton_2_phi,\"pt\") : 0') \\\n",
    "             .Define('JPsi_eta','n_genjpsicands > 0 ? kinematics2l(JPsiLepton_1_pdgId,JPsiLepton_1_pt,JPsiLepton_1_eta,JPsiLepton_1_phi,JPsiLepton_2_pdgId,JPsiLepton_2_pt,JPsiLepton_2_eta,JPsiLepton_2_phi,\"eta\") : 0') \\\n",
    "             .Define('JPsi_phi','n_genjpsicands > 0 ? kinematics2l(JPsiLepton_1_pdgId,JPsiLepton_1_pt,JPsiLepton_1_eta,JPsiLepton_1_phi,JPsiLepton_2_pdgId,JPsiLepton_2_pt,JPsiLepton_2_eta,JPsiLepton_2_phi,\"phi\") : 0')\n",
    "            \n",
    "    #jet selection\n",
    "    rdf = rdf.Define('genjet', 'GenJet_pt>100 && abs(GenJet_eta)<2.4 && crossClean(GenJet_eta,GenJet_phi,GenLep_eta[gentriglep],GenLep_phi[gentriglep])') \\\n",
    "             .Define('n_genjet', 'Sum(genjet)')\n",
    "    \n",
    "    #save the selection\n",
    "    columns=['n_genlep','n_gentriglep','n_genjpsicands']\n",
    "    columns+=['TrigLepton_pdgId','TrigLepton_pt','TrigLepton_eta','TrigLepton_phi']\n",
    "    for i in range(1,3):\n",
    "        columns+=[f'JPsiLepton_{i}_pdgId',f'JPsiLepton_{i}_pt',f'JPsiLepton_{i}_eta',f'JPsiLepton_{i}_phi']\n",
    "    columns+=['JPsi_pt','JPsi_eta','JPsi_phi','JPsi_mass']\n",
    "    rdf.Snapshot('Events',outfile,columns)\n",
    "    ROOT.ROOT.DisableImplicitMT()\n",
    "\n",
    "runSelectionOn()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c6d6027",
   "metadata": {},
   "source": [
    "We open the snapshot as a pandas DataFrame to inspect it's contents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "d5f84106",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Read 6351 events. Columns available are=['n_genlep', 'n_gentriglep', 'n_genjpsicands', 'TrigLepton_pdgId', 'TrigLepton_pt', 'TrigLepton_eta', 'TrigLepton_phi', 'JPsiLepton_1_pdgId', 'JPsiLepton_1_pt', 'JPsiLepton_1_eta', 'JPsiLepton_1_phi', 'JPsiLepton_2_pdgId', 'JPsiLepton_2_pt', 'JPsiLepton_2_eta', 'JPsiLepton_2_phi', 'JPsi_pt', 'JPsi_eta', 'JPsi_phi', 'JPsi_mass']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n_genlep</th>\n",
       "      <th>n_gentriglep</th>\n",
       "      <th>TrigLepton_pdgId</th>\n",
       "      <th>TrigLepton_pt</th>\n",
       "      <th>TrigLepton_eta</th>\n",
       "      <th>TrigLepton_phi</th>\n",
       "      <th>JPsiLepton_1_pdgId</th>\n",
       "      <th>JPsiLepton_1_pt</th>\n",
       "      <th>JPsiLepton_1_eta</th>\n",
       "      <th>JPsiLepton_1_phi</th>\n",
       "      <th>JPsiLepton_2_pdgId</th>\n",
       "      <th>JPsiLepton_2_pt</th>\n",
       "      <th>JPsiLepton_2_eta</th>\n",
       "      <th>JPsiLepton_2_phi</th>\n",
       "      <th>JPsi_pt</th>\n",
       "      <th>JPsi_eta</th>\n",
       "      <th>JPsi_phi</th>\n",
       "      <th>JPsi_mass</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "      <td>6351.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.035427</td>\n",
       "      <td>0.002047</td>\n",
       "      <td>0.014328</td>\n",
       "      <td>0.047714</td>\n",
       "      <td>-0.000703</td>\n",
       "      <td>-0.001048</td>\n",
       "      <td>-8.912612</td>\n",
       "      <td>3.478271</td>\n",
       "      <td>0.071583</td>\n",
       "      <td>0.001404</td>\n",
       "      <td>8.912612</td>\n",
       "      <td>3.528576</td>\n",
       "      <td>0.081026</td>\n",
       "      <td>0.010048</td>\n",
       "      <td>3.060650</td>\n",
       "      <td>3.060650</td>\n",
       "      <td>3.060650</td>\n",
       "      <td>3.060650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.194826</td>\n",
       "      <td>0.045200</td>\n",
       "      <td>0.588030</td>\n",
       "      <td>1.063634</td>\n",
       "      <td>0.062796</td>\n",
       "      <td>0.074989</td>\n",
       "      <td>9.445947</td>\n",
       "      <td>1.115490</td>\n",
       "      <td>1.239720</td>\n",
       "      <td>1.768238</td>\n",
       "      <td>9.445947</td>\n",
       "      <td>1.144421</td>\n",
       "      <td>1.248031</td>\n",
       "      <td>1.761921</td>\n",
       "      <td>0.277546</td>\n",
       "      <td>0.277546</td>\n",
       "      <td>0.277546</td>\n",
       "      <td>0.277546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.386719</td>\n",
       "      <td>-3.063965</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.395996</td>\n",
       "      <td>-3.141113</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.397949</td>\n",
       "      <td>-3.140137</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>2.690523</td>\n",
       "      <td>-0.962830</td>\n",
       "      <td>-1.550659</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>2.729295</td>\n",
       "      <td>-0.976990</td>\n",
       "      <td>-1.534912</td>\n",
       "      <td>3.099464</td>\n",
       "      <td>3.099464</td>\n",
       "      <td>3.099464</td>\n",
       "      <td>3.099464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>3.339812</td>\n",
       "      <td>0.101257</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>3.378597</td>\n",
       "      <td>0.093918</td>\n",
       "      <td>-0.020386</td>\n",
       "      <td>3.099892</td>\n",
       "      <td>3.099892</td>\n",
       "      <td>3.099892</td>\n",
       "      <td>3.099892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-13.000000</td>\n",
       "      <td>4.155869</td>\n",
       "      <td>1.133179</td>\n",
       "      <td>1.563721</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>4.199870</td>\n",
       "      <td>1.148682</td>\n",
       "      <td>1.544678</td>\n",
       "      <td>3.100176</td>\n",
       "      <td>3.100176</td>\n",
       "      <td>3.100176</td>\n",
       "      <td>3.100176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>28.575230</td>\n",
       "      <td>1.755127</td>\n",
       "      <td>2.230469</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>8.796116</td>\n",
       "      <td>2.399902</td>\n",
       "      <td>3.141113</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>12.461478</td>\n",
       "      <td>2.398926</td>\n",
       "      <td>3.141113</td>\n",
       "      <td>9.552274</td>\n",
       "      <td>9.552274</td>\n",
       "      <td>9.552274</td>\n",
       "      <td>9.552274</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          n_genlep  n_gentriglep  TrigLepton_pdgId  TrigLepton_pt  \\\n",
       "count  6351.000000   6351.000000       6351.000000    6351.000000   \n",
       "mean      2.035427      0.002047          0.014328       0.047714   \n",
       "std       0.194826      0.045200          0.588030       1.063634   \n",
       "min       1.000000      0.000000        -13.000000       0.000000   \n",
       "25%       2.000000      0.000000          0.000000       0.000000   \n",
       "50%       2.000000      0.000000          0.000000       0.000000   \n",
       "75%       2.000000      0.000000          0.000000       0.000000   \n",
       "max       4.000000      1.000000         13.000000      28.575230   \n",
       "\n",
       "       TrigLepton_eta  TrigLepton_phi  JPsiLepton_1_pdgId  JPsiLepton_1_pt  \\\n",
       "count     6351.000000     6351.000000         6351.000000      6351.000000   \n",
       "mean        -0.000703       -0.001048           -8.912612         3.478271   \n",
       "std          0.062796        0.074989            9.445947         1.115490   \n",
       "min         -2.386719       -3.063965          -13.000000         0.000000   \n",
       "25%          0.000000        0.000000          -13.000000         2.690523   \n",
       "50%          0.000000        0.000000          -13.000000         3.339812   \n",
       "75%          0.000000        0.000000          -13.000000         4.155869   \n",
       "max          1.755127        2.230469           13.000000         8.796116   \n",
       "\n",
       "       JPsiLepton_1_eta  JPsiLepton_1_phi  JPsiLepton_2_pdgId  \\\n",
       "count       6351.000000       6351.000000         6351.000000   \n",
       "mean           0.071583          0.001404            8.912612   \n",
       "std            1.239720          1.768238            9.445947   \n",
       "min           -2.395996         -3.141113          -13.000000   \n",
       "25%           -0.962830         -1.550659           13.000000   \n",
       "50%            0.101257          0.000000           13.000000   \n",
       "75%            1.133179          1.563721           13.000000   \n",
       "max            2.399902          3.141113           13.000000   \n",
       "\n",
       "       JPsiLepton_2_pt  JPsiLepton_2_eta  JPsiLepton_2_phi      JPsi_pt  \\\n",
       "count      6351.000000       6351.000000       6351.000000  6351.000000   \n",
       "mean          3.528576          0.081026          0.010048     3.060650   \n",
       "std           1.144421          1.248031          1.761921     0.277546   \n",
       "min           0.000000         -2.397949         -3.140137     0.000000   \n",
       "25%           2.729295         -0.976990         -1.534912     3.099464   \n",
       "50%           3.378597          0.093918         -0.020386     3.099892   \n",
       "75%           4.199870          1.148682          1.544678     3.100176   \n",
       "max          12.461478          2.398926          3.141113     9.552274   \n",
       "\n",
       "          JPsi_eta     JPsi_phi    JPsi_mass  \n",
       "count  6351.000000  6351.000000  6351.000000  \n",
       "mean      3.060650     3.060650     3.060650  \n",
       "std       0.277546     0.277546     0.277546  \n",
       "min       0.000000     0.000000     0.000000  \n",
       "25%       3.099464     3.099464     3.099464  \n",
       "50%       3.099892     3.099892     3.099892  \n",
       "75%       3.100176     3.100176     3.100176  \n",
       "max       9.552274     9.552274     9.552274  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#open as a pandas dataframe\n",
    "rdf=ROOT.RDataFrame('Events','genlevel.root')\n",
    "df=pd.DataFrame(rdf.AsNumpy())\n",
    "print(f'Read {df.shape[0]} events. Columns available are={list(df.columns)}')\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "26e08324",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n_genlep</th>\n",
       "      <th>n_gentriglep</th>\n",
       "      <th>n_genjpsicands</th>\n",
       "      <th>TrigLepton_pdgId</th>\n",
       "      <th>TrigLepton_pt</th>\n",
       "      <th>TrigLepton_eta</th>\n",
       "      <th>TrigLepton_phi</th>\n",
       "      <th>JPsiLepton_1_pdgId</th>\n",
       "      <th>JPsiLepton_1_pt</th>\n",
       "      <th>JPsiLepton_1_eta</th>\n",
       "      <th>JPsiLepton_1_phi</th>\n",
       "      <th>JPsiLepton_2_pdgId</th>\n",
       "      <th>JPsiLepton_2_pt</th>\n",
       "      <th>JPsiLepton_2_eta</th>\n",
       "      <th>JPsiLepton_2_phi</th>\n",
       "      <th>JPsi_pt</th>\n",
       "      <th>JPsi_eta</th>\n",
       "      <th>JPsi_phi</th>\n",
       "      <th>JPsi_mass</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>5.519522</td>\n",
       "      <td>-1.598145</td>\n",
       "      <td>-1.058838</td>\n",
       "      <td>13</td>\n",
       "      <td>3.038785</td>\n",
       "      <td>-1.328613</td>\n",
       "      <td>-0.338562</td>\n",
       "      <td>3.100114</td>\n",
       "      <td>3.100114</td>\n",
       "      <td>3.100114</td>\n",
       "      <td>3.100114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>3.074169</td>\n",
       "      <td>-0.248352</td>\n",
       "      <td>-0.634644</td>\n",
       "      <td>13</td>\n",
       "      <td>4.127180</td>\n",
       "      <td>-0.565430</td>\n",
       "      <td>-1.466064</td>\n",
       "      <td>3.099948</td>\n",
       "      <td>3.099948</td>\n",
       "      <td>3.099948</td>\n",
       "      <td>3.099948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>2.796811</td>\n",
       "      <td>1.892578</td>\n",
       "      <td>0.826538</td>\n",
       "      <td>13</td>\n",
       "      <td>4.715885</td>\n",
       "      <td>1.081543</td>\n",
       "      <td>1.000977</td>\n",
       "      <td>3.099559</td>\n",
       "      <td>3.099559</td>\n",
       "      <td>3.099559</td>\n",
       "      <td>3.099559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>3.472961</td>\n",
       "      <td>-0.940796</td>\n",
       "      <td>2.542480</td>\n",
       "      <td>13</td>\n",
       "      <td>2.102580</td>\n",
       "      <td>-0.071518</td>\n",
       "      <td>1.816650</td>\n",
       "      <td>3.099885</td>\n",
       "      <td>3.099885</td>\n",
       "      <td>3.099885</td>\n",
       "      <td>3.099885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>3.477816</td>\n",
       "      <td>1.502686</td>\n",
       "      <td>1.774414</td>\n",
       "      <td>13</td>\n",
       "      <td>3.448358</td>\n",
       "      <td>1.364258</td>\n",
       "      <td>0.860596</td>\n",
       "      <td>3.100313</td>\n",
       "      <td>3.100313</td>\n",
       "      <td>3.100313</td>\n",
       "      <td>3.100313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6346</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13</td>\n",
       "      <td>3.180300</td>\n",
       "      <td>-1.746582</td>\n",
       "      <td>-0.614136</td>\n",
       "      <td>-13</td>\n",
       "      <td>2.826629</td>\n",
       "      <td>-1.320312</td>\n",
       "      <td>-1.576660</td>\n",
       "      <td>3.067705</td>\n",
       "      <td>3.067705</td>\n",
       "      <td>3.067705</td>\n",
       "      <td>3.067705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6347</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>6.859251</td>\n",
       "      <td>-2.133301</td>\n",
       "      <td>-2.606934</td>\n",
       "      <td>13</td>\n",
       "      <td>2.601455</td>\n",
       "      <td>-2.145996</td>\n",
       "      <td>-1.857666</td>\n",
       "      <td>3.101009</td>\n",
       "      <td>3.101009</td>\n",
       "      <td>3.101009</td>\n",
       "      <td>3.101009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6348</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>2.939542</td>\n",
       "      <td>0.709473</td>\n",
       "      <td>2.037598</td>\n",
       "      <td>13</td>\n",
       "      <td>4.577920</td>\n",
       "      <td>1.017822</td>\n",
       "      <td>2.843262</td>\n",
       "      <td>3.100289</td>\n",
       "      <td>3.100289</td>\n",
       "      <td>3.100289</td>\n",
       "      <td>3.100289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6349</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13</td>\n",
       "      <td>3.952382</td>\n",
       "      <td>0.002604</td>\n",
       "      <td>0.884155</td>\n",
       "      <td>-13</td>\n",
       "      <td>4.851138</td>\n",
       "      <td>0.268616</td>\n",
       "      <td>1.533447</td>\n",
       "      <td>3.035336</td>\n",
       "      <td>3.035336</td>\n",
       "      <td>3.035336</td>\n",
       "      <td>3.035336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6350</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13</td>\n",
       "      <td>4.153342</td>\n",
       "      <td>1.256836</td>\n",
       "      <td>1.066650</td>\n",
       "      <td>-13</td>\n",
       "      <td>2.412954</td>\n",
       "      <td>1.942139</td>\n",
       "      <td>0.370056</td>\n",
       "      <td>3.099682</td>\n",
       "      <td>3.099682</td>\n",
       "      <td>3.099682</td>\n",
       "      <td>3.099682</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6351 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      n_genlep  n_gentriglep n_genjpsicands  TrigLepton_pdgId  TrigLepton_pt  \\\n",
       "0            2             0           True                 0            0.0   \n",
       "1            2             0           True                 0            0.0   \n",
       "2            2             0           True                 0            0.0   \n",
       "3            2             0           True                 0            0.0   \n",
       "4            2             0           True                 0            0.0   \n",
       "...        ...           ...            ...               ...            ...   \n",
       "6346         2             0           True                 0            0.0   \n",
       "6347         2             0           True                 0            0.0   \n",
       "6348         2             0           True                 0            0.0   \n",
       "6349         2             0           True                 0            0.0   \n",
       "6350         2             0           True                 0            0.0   \n",
       "\n",
       "      TrigLepton_eta  TrigLepton_phi  JPsiLepton_1_pdgId  JPsiLepton_1_pt  \\\n",
       "0                0.0             0.0                 -13         5.519522   \n",
       "1                0.0             0.0                 -13         3.074169   \n",
       "2                0.0             0.0                 -13         2.796811   \n",
       "3                0.0             0.0                 -13         3.472961   \n",
       "4                0.0             0.0                 -13         3.477816   \n",
       "...              ...             ...                 ...              ...   \n",
       "6346             0.0             0.0                  13         3.180300   \n",
       "6347             0.0             0.0                 -13         6.859251   \n",
       "6348             0.0             0.0                 -13         2.939542   \n",
       "6349             0.0             0.0                  13         3.952382   \n",
       "6350             0.0             0.0                  13         4.153342   \n",
       "\n",
       "      JPsiLepton_1_eta  JPsiLepton_1_phi  JPsiLepton_2_pdgId  JPsiLepton_2_pt  \\\n",
       "0            -1.598145         -1.058838                  13         3.038785   \n",
       "1            -0.248352         -0.634644                  13         4.127180   \n",
       "2             1.892578          0.826538                  13         4.715885   \n",
       "3            -0.940796          2.542480                  13         2.102580   \n",
       "4             1.502686          1.774414                  13         3.448358   \n",
       "...                ...               ...                 ...              ...   \n",
       "6346         -1.746582         -0.614136                 -13         2.826629   \n",
       "6347         -2.133301         -2.606934                  13         2.601455   \n",
       "6348          0.709473          2.037598                  13         4.577920   \n",
       "6349          0.002604          0.884155                 -13         4.851138   \n",
       "6350          1.256836          1.066650                 -13         2.412954   \n",
       "\n",
       "      JPsiLepton_2_eta  JPsiLepton_2_phi   JPsi_pt  JPsi_eta  JPsi_phi  \\\n",
       "0            -1.328613         -0.338562  3.100114  3.100114  3.100114   \n",
       "1            -0.565430         -1.466064  3.099948  3.099948  3.099948   \n",
       "2             1.081543          1.000977  3.099559  3.099559  3.099559   \n",
       "3            -0.071518          1.816650  3.099885  3.099885  3.099885   \n",
       "4             1.364258          0.860596  3.100313  3.100313  3.100313   \n",
       "...                ...               ...       ...       ...       ...   \n",
       "6346         -1.320312         -1.576660  3.067705  3.067705  3.067705   \n",
       "6347         -2.145996         -1.857666  3.101009  3.101009  3.101009   \n",
       "6348          1.017822          2.843262  3.100289  3.100289  3.100289   \n",
       "6349          0.268616          1.533447  3.035336  3.035336  3.035336   \n",
       "6350          1.942139          0.370056  3.099682  3.099682  3.099682   \n",
       "\n",
       "      JPsi_mass  \n",
       "0      3.100114  \n",
       "1      3.099948  \n",
       "2      3.099559  \n",
       "3      3.099885  \n",
       "4      3.100313  \n",
       "...         ...  \n",
       "6346   3.067705  \n",
       "6347   3.101009  \n",
       "6348   3.100289  \n",
       "6349   3.035336  \n",
       "6350   3.099682  \n",
       "\n",
       "[6351 rows x 19 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa1a2902",
   "metadata": {},
   "source": [
    "We make a simple mass distribution of the $J/\\Psi$ candidates mass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "38ef32ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from helpers import *\n",
    "\n",
    "dfleading=df[['JPsiLepton_1_pt','JPsiLepton_1_eta']].rename(\n",
    "    columns={'JPsiLepton_1_pt':'JPsiLepton_pt','JPsiLepton_1_eta':'JPsiLepton_eta'}\n",
    ")\n",
    "dfleading['JPsiLepton_abseta']=np.abs(dfleading['JPsiLepton_eta'])\n",
    "\n",
    "dfsubleading=df[['JPsiLepton_2_pt','JPsiLepton_2_eta']].rename(\n",
    "    columns={'JPsiLepton_2_pt':'JPsiLepton_pt','JPsiLepton_2_eta':'JPsiLepton_eta'}\n",
    ")\n",
    "dfsubleading['JPsiLepton_abseta']=np.abs(dfsubleading['JPsiLepton_eta'])\n",
    "\n",
    "\n",
    "dflist=[(dfleading,None,'Leading'),(dfsubleading,None,'Sub-leading')]\n",
    "for v,vtitle,bins in [\n",
    "    ('JPsiLepton_pt', rf'Lepton $p_{{T}}$ [GeV]',np.linspace(0,10,100)),\n",
    "    ('JPsiLepton_abseta', rf'Lepton pseudo-rapidity',np.linspace(0,2.5,100)),\n",
    "        \n",
    "]:\n",
    "    inspectDistribution(dflist,v,vtitle,bins)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f30b932",
   "metadata": {},
   "source": [
    "NanoAODs available so far:\n",
    "\n",
    "* ggpsi1g : /eos/cms/store/cmst3/group/top/ttbarjpsi/ggpsi1g/\n",
    "* ttbar : /eos/cms/store/cmst3/group/top/ttbarjpsi/TTTo2J1L1Nu_CP5_13p6TeV_powheg-pythia8/ (several files)\n",
    "* x3s18ttbar_HO : /eos/cms/store/cmst3/group/top/ttbarjpsi/gg_ccx3s18ttbar_HO/gg_ccx3s18ttbar_HO_NANOGEN.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3de338f5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  },
  "sparkconnect": {
   "bundled_options": [
    "LongRunningAnalysis",
    "Spark3Shuffle",
    "MemoryIntensive"
   ],
   "list_of_options": []
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
