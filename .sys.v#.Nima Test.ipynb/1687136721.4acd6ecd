{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8bfc8ece",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'mplhep'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-890574a627bc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmplhep\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mhep\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mhep\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstyle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"CMS\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'mplhep'"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt \n",
    "import mplhep as hep \n",
    "hep.style.use(\"CMS\") \n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "def inspectDistribution(dflist,\n",
    "                        var,xlabel,bins,ylabel='Events/bin',xscale='linear',yscale='linear'):\n",
    "    \"\"\"\n",
    "    make a simple histogram out of a variable\n",
    "    dflist is a list of (dataframe, mask, label) to overlay in the plot\n",
    "    if mask is None, a trivial mask (all events passing) is used\n",
    "    if documul=True, the cumulative distribution is added\n",
    "    \"\"\"\n",
    "    \n",
    "    fig,ax=plt.subplots(figsize=(8,8))\n",
    "    for df,mask,label in dflist:\n",
    "        if mask is None: mask=np.ones(df.shape[0],dtype=bool)\n",
    "        ax.hist(df[mask][var],label=label,histtype='step',lw=2,bins=bins)\n",
    "    ax.set_xlabel(xlabel)\n",
    "    ax.set_ylabel(ylabel)\n",
    "    ax.set_xscale(xscale)\n",
    "    ax.set_yscale(yscale)\n",
    "    \n",
    "    ax.grid()\n",
    "    if len(dflist)>3:\n",
    "        ax.legend(bbox_to_anchor=(1.,1.),fontsize=16)\n",
    "        fig.set_figwidth(12)\n",
    "    else:\n",
    "        ax.legend()\n",
    "    hep.cms.label(loc=1,data=True,rlabel=r'$\\sqrt{s_{NN}}=13.6 TeV$')\n",
    "    fig.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "95bac30a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
